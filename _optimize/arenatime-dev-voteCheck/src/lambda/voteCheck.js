(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.handler = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";const aws=require("aws-sdk"),dyn=new aws.DynamoDB;module.exports.handler=async(event,context)=>{let req=JSON.parse(event.body),myIp=event.requestContext.identity.sourceIp,checkParams={TableName:"voter-table",Key:{matchId:{S:req.matchId}},ProjectionExpression:"upvoters, downvoters"},check=await dyn.getItem(checkParams).promise().then(data=>{let result={statusCode:200,body:JSON.stringify({message:data,runtime:context})};return result}).catch(err=>{let result={statusCode:400,body:JSON.stringify({message:"Getting Item Failed",runtime:err})};return result}),resCheck=JSON.parse(check.body).message.Item,checkVote="Not Voted",upv=resCheck.upvoters.L,dov=resCheck.downvoters.L;for(let u in upv)if(upv[u].S==myIp){checkVote="Upvoted";break}for(let d in dov)if(dov[d].S==myIp){checkVote="Downvoted";break}let setUpvote,setDownvote,getParams={TableName:"match-table",ProjectionExpression:"upvotes, downvotes, netUpvotes",Key:{matchId:{S:req.matchId}}},get=await dyn.getItem(getParams).promise().then(data=>{let result={statusCode:200,body:JSON.stringify({message:data,runtime:context})};return result}).catch(err=>{let result={statusCode:400,body:JSON.stringify({message:"Getting Item Failed",runtime:err})};return result}),resGet=JSON.parse(get.body).message.Item,upvoteValue=+resGet.upvotes.N,downvoteValue=+resGet.downvotes.N,netUpvoteValue=+resGet.netUpvotes.N;if("Not Voted"==checkVote?"up"==req.vote?(setUpvote="vote",setDownvote="none"):(setUpvote="none",setDownvote="vote"):"Upvoted"==checkVote?"up"==req.vote?(setUpvote="unvote",setDownvote="none"):(setUpvote="unvote",setDownvote="vote"):"up"==req.vote?(setUpvote="vote",setDownvote="unvote"):(setUpvote="none",setDownvote="unvote"),!1){return{statusCode:200,body:{message:"Same votes exists."},headers:{"Access-Control-Allow-Origin":"https://stdev17.github.io","Access-Control-Allow-Credentials":!0}}}if("vote"==setUpvote)resCheck.upvoters.L.push({S:myIp.toString()}),upvoteValue+=1,netUpvoteValue+=1;else if("unvote"==setUpvote)for(let u=0;u<resCheck.upvoters.L.length;u++)if(resCheck.upvoters.L[u].S==myIp){resCheck.upvoters.L.splice(u,1),upvoteValue-=1,netUpvoteValue-=1;break}if("vote"==setDownvote)resCheck.downvoters.L.push({S:myIp.toString()}),downvoteValue+=1,netUpvoteValue-=1;else if("unvote"==setDownvote)for(let u=0;u<resCheck.downvoters.L.length;u++)if(resCheck.downvoters.L[u].S==myIp){resCheck.downvoters.L.splice(u,1),downvoteValue-=1,netUpvoteValue+=1;break}let setParams={TableName:"match-table",Key:{matchId:{S:req.matchId}},UpdateExpression:"set netUpvotes = :net, upvotes = :up, downvotes = :down",ExpressionAttributeValues:{":net":{N:netUpvoteValue.toString()},":up":{N:upvoteValue.toString()},":down":{N:downvoteValue.toString()}}},updateMatch=await dyn.updateItem(setParams).promise().then(data=>{let result={statusCode:200,body:JSON.stringify({message:data,runtime:context})};return result}).catch(err=>{let result={statusCode:400,body:JSON.stringify({message:"Setting Votes Failed",runtime:err}),headers:{"Access-Control-Allow-Origin":"https://stdev17.github.io","Access-Control-Allow-Credentials":!0}};return result});if("Setting Votes Failed"==JSON.parse(updateMatch.body).message)return updateMatch;let voterParams={TableName:"voter-table",Key:{matchId:{S:req.matchId}},UpdateExpression:"set upvoters = :up, downvoters = :down",ExpressionAttributeValues:{":up":{L:resCheck.upvoters.L},":down":{L:resCheck.downvoters.L}}},updateVoter=await dyn.updateItem(voterParams).promise().then(()=>{let result={statusCode:200,body:JSON.stringify({message:"Vote Succeeded",vote:{up:setUpvote,down:setDownvote},runtime:context}),headers:{"Access-Control-Allow-Origin":"https://stdev17.github.io","Access-Control-Allow-Credentials":!0}};return result}).catch(err=>{let result={statusCode:400,body:JSON.stringify({message:"Setting Voters Failed",runtime:err}),headers:{"Access-Control-Allow-Origin":"https://stdev17.github.io","Access-Control-Allow-Credentials":!0}};return result});return updateVoter};

},{"aws-sdk":undefined}]},{},[1])(1)
});
